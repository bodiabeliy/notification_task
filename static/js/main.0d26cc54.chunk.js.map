{"version":3,"sources":["components/Stepper.js","components/LevelEnglish.js","components/ListEvent.js","components/ListArea.js","App.js","reportWebVitals.js","index.js"],"names":["VerticalStepper","useState","Set","activeStep","setActiveStep","steps","handleNext","prevActiveStep","Stepper","orientation","map","label","Step","onClick","StepLabel","LevelEnglish","className","ListEvent","notes_detailes","src","statusIcon","alt","text","style","color","statusCompled","timeCondition","ListArea","props","notes","note","App","open","setOpen","console","log","noteType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAUe,SAASA,IACtB,MAAoCC,mBAAS,EAAE,IAAIC,KAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EANC,CAAC,wIAA2B,4EAAiB,mDAAY,4EAAiB,6HAQ3EC,EAAa,WACjBF,GAAc,SAACG,GAAD,OAAoBA,EAAiB,MAGrD,OACE,8BACE,cAACC,EAAA,EAAD,CAASL,WAAYA,EAAYM,YAAY,WAA7C,SACGJ,EAAMK,KAAI,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,CAAkBC,QAASP,EAA3B,SACE,cAACQ,EAAA,EAAD,UAAYH,KADHA,UCLNI,MAff,WACC,OACC,cAAC,WAAD,UACC,sBAAKC,UAAU,2BAAf,UACC,qBAAKA,UAAU,uBAAf,SACE,iJAEH,qBAAKA,UAAU,yBAAf,SACA,cAAC,EAAD,YCSYC,MAjBf,YAAsC,IAAlBC,EAAiB,EAAjBA,eACnB,OACC,cAAC,WAAD,UACC,sBAAKF,UAAU,mBAAf,UACC,qBAAKA,UAAU,wBAAf,SACE,qBAAKG,IAAKD,EAAeE,WAAYC,IAAI,OAE3C,sBAAKL,UAAU,sBAAf,UACE,4BAAIE,EAAeI,OACnB,mBAAGC,MAAO,CAACC,MAAM,WAAjB,SAA8BN,EAAeO,gBAC7C,sBAAMT,UAAU,mBAAhB,SAAoCE,EAAeQ,yBCW1CC,MArBf,SAAkBC,GACjB,OACC,cAAC,WAAD,UACE,sBAAKZ,UAAU,0BAAf,UACC,qBAAKA,UAAU,qBAAf,SACCY,EAAMC,MAAMnB,KAAI,SAAAoB,GACjB,OACC,cAAC,EAAD,CAAWZ,eAAgBY,SAI5B,qBAAKd,UAAU,sBAAf,SACC,2DCgESe,MA3Ef,WACE,MAAwB9B,oBAAS,GAAjC,mBAAO+B,EAAP,KAAaC,EAAb,KA4CA,OACE,sBAAKjB,UAAU,MAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,yBAAf,UACU,IAATgB,EACC,eAAC,WAAD,WACE,wBACAhB,UAAU,iBACVH,QA9Ca,WACrBqB,QAAQC,IAAI,qBACbF,GAAQ,IA0CC,SAIA,qBAAKd,IAAI,qBAAqBE,IAAI,OAEpC,cAAC,EAAD,CAAUQ,MAzCE,CACpB,CACET,WAAY,4BACZE,KAAM,kMACNI,cAAe,QACfU,SAAS,GAEX,CACEhB,WAAY,kBACZE,KAAM,wKACNI,cAAe,iBACfD,cAAe,OACfW,SAAS,GAEX,CACEhB,WAAY,4BACZE,KAAM,kMACNI,cAAe,iBACfU,SAAS,GAEV,CACChB,WAAY,oBACZE,KAAM,iTACNI,cAAe,iBACfU,SAAS,SAqBH,wBACApB,UAAU,iBACVH,QA5De,WACrBqB,QAAQC,IAAI,sBACZF,GAAQ,IAwDF,SAIE,qBAAKd,IAAI,oBAAoBE,IAAI,WAKvC,cAAC,EAAD,QC7DSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d26cc54.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\n\r\nfunction StepDescription() {\r\n  return ['Начинающий/Элементарный', 'Ниже среднего', 'Среднего', 'Выше среднего', 'Продвинутый/свободный'];\r\n}\r\n\r\n\r\nexport default function VerticalStepper() {\r\n  const [activeStep, setActiveStep] = useState(0,new Set());\r\n  const steps = StepDescription();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label) => (\r\n          <Step key={label} onClick={handleNext}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n   </div>\r\n  );\r\n}","import React,{ Fragment } from \"react\";\r\nimport Stepper from './Stepper'\r\nfunction LevelEnglish() {\r\n return (\r\n  <Fragment>\r\n   <div className=\"level-english__container\">\r\n    <div className=\"level-english__title\">\r\n      <h1>Уровень Английского</h1>\r\n    </div>\r\n   <div className=\"level-english__stepper\">\r\n   <Stepper />\r\n   </div>\r\n   </div>\r\n  </Fragment>\r\n );\r\n}\r\n\r\nexport default LevelEnglish;","import React, {Fragment} from 'react';\r\n\r\nfunction ListEvent({notes_detailes}) {\r\n return (\r\n  <Fragment>\r\n   <div className=\"notes__container\">\r\n    <div className=\"notes-status__section\">\r\n      <img src={notes_detailes.statusIcon} alt=\"\" />\r\n    </div>\r\n    <div className=\"notes-body__section\">\r\n      <p>{notes_detailes.text}</p>\r\n      <p style={{color:'#0B8156'}}>{notes_detailes.statusCompled}</p>\r\n      <span className='notes-body__span'>{notes_detailes.timeCondition}</span>\r\n    </div>\r\n   </div>\r\n  </Fragment>\r\n );\r\n}\r\n\r\nexport default ListEvent;","import React, {Fragment} from 'react';\r\nimport ListEvent from './ListEvent'\r\nfunction ListArea(props) {\r\n return (\r\n  <Fragment>\r\n    <div className=\"list-contant__list-area\">\r\n     <div className=\"list-area__wrapper\">\r\n     {props.notes.map(note => {\r\n     return (\r\n      <ListEvent notes_detailes={note}/>\r\n     )\r\n     })}\r\n     </div>\r\n     <div className=\"list-area__text-btn\">\r\n      <h3>\r\n      ALL NOTIFICATIONS\r\n      </h3>\r\n     </div>\r\n    </div>\r\n  </Fragment>\r\n );\r\n}\r\n\r\nexport default ListArea;","import React, {useState, Fragment} from 'react'\nimport LevelEnglish from './components/LevelEnglish'\nimport ListArea from './components/ListArea'\nfunction App() {\n  const [open, setOpen] = useState(false);\n\n  const ShowDialogList = () => {\n    console.log('./images/close.svg');\n    setOpen(true);\n  };\n  const HideDialogList = () => {\n    console.log('./images/bell.svg');\n   setOpen(false);\n };\n\n // list array\n    // noteType - is type of write notes \n   // (1 - needs complection; 2 - have done task; 3 - comment)\n //\n const listOfEvents = [\n  {\n    statusIcon: './images/toRightArrow.svg', \n    text: 'New task request from Костянтин Костянтинопольський', \n    timeCondition: '14:23',\n    noteType:1\n  },\n  {\n    statusIcon: './images/ok.svg',\n    text: 'Shareholder’s, Optionee’s & Investor’s Documents Analysis изменен статус на',\n    timeCondition: '15:19 21 April',\n    statusCompled: 'Done',\n    noteType:2\n  },\n  {\n    statusIcon: './images/toRightArrow.svg',\n    text: 'New task request from Костянтин Костянтинопольський', \n    timeCondition: '14:23 18 April',\n    noteType:1\n  },\n   {\n    statusIcon: './images/chat.svg',\n    text: 'Новый комментарий от Костянтин Костянтинопольський Minutes Book Analysis',\n    timeCondition: '14:23 15 April',\n    noteType:3\n  }\n  \n ]\n\n  return (\n    <div className=\"App\">\n      <div className=\"list-contant__wrapper\">\n        <div className=\"list-contant__show-btn\">\n        {open === true ?\n          <Fragment>\n            <button\n            className='show-btn__bell'\n            onClick={HideDialogList}\n            >\n            <img src=\"./images/close.svg\" alt=\"\" />\n          </button>\n          <ListArea notes={listOfEvents}/>\n          </Fragment>\n          \n          :\n          <button\n          className='show-btn__bell'\n          onClick={ShowDialogList}\n          >\n            <img src=\"./images/bell.svg\" alt=\"\" />\n          </button>\n        }\n        </div>\n      </div>\n      <LevelEnglish />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}